{"version":3,"sources":["SplashSection.tsx","NavBarComponent.tsx","BioComponent.tsx","SkillsComponentLanguages.tsx","SkillsComponentFrameworks.tsx","SkillsComponentDatabases.tsx","SkillsComponentTests.tsx","SkillsComponentOther.tsx","SkillsComponent.tsx","ProjectModal.tsx","ProjectsComponentContainer.tsx","ProjectsComponent.tsx","ContactComponent.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["particlesParam","ParticlesParam","SplashSection","id","className","width","height","params","NavBarComponent","props","useState","stickNav","setStickNav","initialOffsetTop","setInitialOffsetTop","divRef","React","createRef","handleScroll","e","scrollingElement","target","node","current","scrollTop","offsetTop","determineActiveLink","link","activeNav","useEffect","window","addEventListener","removeEventListener","ref","smooth","to","activeClassName","isActive","BioComponent","setTrigger","src","alt","logoUri","image","caption","SkillsComponentLanguages","showLogos","setShowLogos","trail","useTrail","length","from","transform","opacity","clientHeight","map","index","div","style","key","data-tip","data-for","SkillsComponentFrameworks","SkillsComponentDatabases","SkillsComponentTests","SkillsComponentOther","SkillsComponent","ProjectModal","closeModal","closeWindow","onClick","open","isOpen","onRequestClose","closeTimeoutMS","project","url","name","description","webLink","githubLink","ProjectsComponentContainer","hover","setHover","openModal","setOpenModal","imageSpring","useSpring","backgroundImage","headerSpring","buttonSpring","onMouseOver","onMouseLeave","h2","button","projects","ProjectsComponent","showProject","setShowProject","ContactComponent","action","method","type","required","rows","App","bioTrigger","setBioTrigger","skillsTrigger","setSkillsTrigger","projectsTrigger","setProjectsTrigger","contactTrigger","setContactTrigger","setActiveNav","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.086896cf.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactParticles from 'react-particles-js';\r\nimport ParticlesParam from './ParticlesParam.json';\r\nimport './SplashSection.css';\r\nimport TextLoop from 'react-text-loop';\r\n\r\nconst particlesParam = ParticlesParam as any;\r\n\r\nconst  SplashSection: React.FC = () => {\r\n  return (\r\n    <div id='splash' className='SplashSection'>\r\n      <ReactParticles className='ReactParticles' width='100%' height='100%' params={particlesParam} />\r\n      <div className='SplashSection-content'>\r\n        <h2>Howdy! I'm Warren Schrader.</h2>\r\n        <h3>\r\n          I'm a <span>\r\n            <TextLoop>\r\n              <span>front-end</span>\r\n              <span>back-end</span>\r\n              <span>full-stack</span>\r\n            </TextLoop> \r\n          </span> web developer.\r\n        </h3>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SplashSection;","import React, {useState, useEffect} from 'react';\r\nimport { NavHashLink as NavLink } from 'react-router-hash-link';\r\nimport './NavBarComponent.css';\r\n\r\ninterface IProps {\r\n  activeNav: string,\r\n}\r\n\r\nconst NavBarComponent: React.FC<IProps> = (props) => {\r\n  const [stickNav, setStickNav] = useState(false);\r\n  const [initialOffsetTop, setInitialOffsetTop] = useState<null | number>(null);\r\n\r\n  let divRef = React.createRef<HTMLDivElement>();\r\n\r\n  const handleScroll = (e: any) => {\r\n    const scrollingElement = e.target.scrollingElement;\r\n    const node = divRef.current;\r\n    if (node && scrollingElement) {\r\n      if (!initialOffsetTop) {\r\n        // saves the initial offsetTop so it can unstuck when scrolling back over spash component\r\n        setInitialOffsetTop(node.offsetTop);\r\n      } else if ((scrollingElement.scrollTop) > (initialOffsetTop)) {\r\n        setStickNav(true);\r\n      } else {\r\n        setStickNav(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', handleScroll, true);\r\n\r\n    return () => {\r\n      window.removeEventListener('scroll', handleScroll, true);\r\n    };\r\n  });\r\n\r\n  function determineActiveLink(link: string) {\r\n    return (link === props.activeNav) ? true : false\r\n  }\r\n\r\n  return (\r\n    <div id='navbar' className={stickNav ? 'sticky' : ''} ref={divRef}>\r\n      <NavLink smooth to='/#splash' activeClassName='active' isActive={() => determineActiveLink('splash')}>Home</NavLink>\r\n      <NavLink smooth to='/#bio' activeClassName='active' isActive={() => determineActiveLink('bio')}>Bio</NavLink>\r\n      <NavLink smooth to='/#skills' activeClassName='active' isActive={() => determineActiveLink('skills')}>Skills</NavLink>\r\n      <NavLink smooth to='/#projects' activeClassName='active' isActive={() => determineActiveLink('projects')}>Projects</NavLink>\r\n      <NavLink smooth to='/#contact' activeClassName='active' isActive={() => determineActiveLink('contact')}>Contact</NavLink>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavBarComponent;","import React, {useEffect} from 'react';\r\nimport './BioComponent.css';\r\n\r\ninterface IProps {\r\n  setTrigger: React.Dispatch<React.SetStateAction<number | null>>,\r\n}\r\n\r\nconst biography = 'Hello! I\\'m a full-stack developer in the San Francisco Bay Area.'\r\n\r\nconst BioComponent: React.FC<IProps> = (props) => {\r\n  let divRef = React.createRef<HTMLDivElement>();\r\n\r\n  useEffect(() => {\r\n    const node = divRef.current;\r\n    if (node) {\r\n      props.setTrigger(node.offsetTop);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div id='bio' className='BioComponent' ref={divRef}>\r\n      <h2>BioComponent</h2>\r\n      <div className='bio-container'>\r\n        <img className='bio-image' src='./images/portrait.jpg' alt='My Portrait' />\r\n        <p>{biography}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BioComponent;","import React, {useState, useEffect} from 'react';\r\nimport {useTrail, animated} from 'react-spring';\r\nimport './SkillsComponentLanguages.css';\r\nimport Reactooltip from 'react-tooltip';\r\n\r\nconst logoUri = [\r\n  {\r\n    image: './images/HTML5_logo_and_wordmark.svg',\r\n    caption: 'HTML5',\r\n  },\r\n  {\r\n    image: './images/CSS3_logo_and_wordmark.svg',\r\n    caption: 'CSS3',\r\n  },\r\n  {\r\n    image: './images/js.png',\r\n    caption: 'Javascript',\r\n  },\r\n  {\r\n    image: './images/Java_logo.svg',\r\n    caption: 'Java',\r\n  }\r\n];\r\n\r\nconst SkillsComponentLanguages: React.FC = () => {\r\n  const [showLogos, setShowLogos] = useState(false);\r\n\r\n  let divRef = React.createRef<HTMLDivElement>();\r\n\r\n  const trail = useTrail(logoUri.length, {\r\n    from: {\r\n      transform: 'translate3d(500px,0,0)',\r\n      opacity: 0,\r\n    },\r\n    transform: showLogos ? 'translate3d(0px,0,0)' : 'translate3d(500px,0,0)',\r\n    opacity: showLogos ? 1 : 0,\r\n  });\r\n\r\n  const handleScroll = (e: any) => {\r\n    const scrollingElement = e.target.scrollingElement;\r\n    const node = divRef.current;\r\n\r\n    if (node && scrollingElement) {\r\n      if ((scrollingElement.clientHeight + scrollingElement.scrollTop) > (node.offsetTop + 200)) {\r\n        setShowLogos(true);\r\n      } else {\r\n        setShowLogos(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', handleScroll, true);\r\n\r\n    return () => {\r\n      window.removeEventListener('scroll', handleScroll, true);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div className='language-container' ref={divRef}>\r\n      <h2 className='header'>Languages</h2>\r\n      <div className='logo-container'>\r\n        {trail.map(({...props}, index) => (\r\n          <animated.div className='logo' style={props}>\r\n            <img\r\n              key={logoUri[index].image}\r\n              alt={logoUri[index].caption}\r\n              src={logoUri[index].image}\r\n              data-tip\r\n              data-for={logoUri[index].image}\r\n            />\r\n            <Reactooltip id={logoUri[index].image}>{logoUri[index].caption}</Reactooltip>\r\n          </animated.div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SkillsComponentLanguages;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {useTrail, animated} from 'react-spring';\r\nimport Reactooltip from 'react-tooltip';\r\n\r\nconst logoUri = [\r\n  {\r\n    image: './images/nodejs-new-pantone-black.png',\r\n    caption: 'Node.JS'\r\n  },\r\n  {\r\n    image: './images/express-facebook-share.png',\r\n    caption: 'Express.JS',\r\n  },\r\n  {\r\n    image: './images/iconfinder_react.js_logo_1174949.svg',\r\n    caption: 'React.JS',\r\n  },\r\n  {\r\n    image: './images/angular.svg',\r\n    caption: 'Angular.JS',\r\n  },\r\n];\r\n\r\nconst SkillsComponentFrameworks: React.FC = () => {\r\n  const [showLogos, setShowLogos] = useState(false);\r\n\r\n  let divRef = React.createRef<HTMLDivElement>();\r\n\r\n  const trail = useTrail(logoUri.length, {\r\n    from: {\r\n      transform: 'translate3d(-500px,0,0)',\r\n      opacity: 0,\r\n    },\r\n    transform: showLogos ? 'translate3d(0px,0,0)' : 'translate3d(-500px,0,0)',\r\n    opacity: showLogos ? 1 : 0,\r\n  });\r\n\r\n  const handleScroll = (e: any) => {\r\n    const scrollingElement = e.target.scrollingElement;\r\n    const node = divRef.current;\r\n\r\n    if (node && scrollingElement) {\r\n      if ((scrollingElement.clientHeight + scrollingElement.scrollTop) > (node.offsetTop + 200)) {\r\n        setShowLogos(true);\r\n      } else {\r\n        setShowLogos(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', handleScroll, true);\r\n\r\n    return () => {\r\n      window.removeEventListener('scroll', handleScroll, true);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div className='frameworks-container' ref={divRef}>\r\n      <div className='logo-container'>\r\n        {trail.map(({...props}, index) => (\r\n          <animated.div className='logo' style={props}>\r\n            <img\r\n              key={logoUri[index].image}\r\n              alt={logoUri[index].caption}\r\n              src={logoUri[index].image}\r\n              data-tip\r\n              data-for={logoUri[index].image}\r\n            />\r\n            <Reactooltip id={logoUri[index].image}>{logoUri[index].caption}</Reactooltip>\r\n          </animated.div>\r\n        ))}\r\n      </div>\r\n      <h2 className='header'>Frameworks</h2>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default SkillsComponentFrameworks;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {useTrail, animated} from 'react-spring';\r\nimport Reactooltip from 'react-tooltip';\r\n\r\nconst logoUri = [\r\n  {\r\n    image: './images/mongodb-logo-rgb-j6w271g1xn.jpg',\r\n    caption: 'MongoDB',\r\n  },\r\n  {\r\n    image: './images/Redis_Logo.svg',\r\n    caption: 'Redis',\r\n  },\r\n  {\r\n    image: './images/sqlite-logo.svg',\r\n    caption: 'SQLite',\r\n  },\r\n  {\r\n    image: './images/firebase-logo.svg',\r\n    caption: 'Firebase',\r\n  },\r\n];\r\n\r\nconst SkillsComponentDatabases: React.FC = () => {\r\n  const [showLogos, setShowLogos] = useState(false);\r\n\r\n  let divRef = React.createRef<HTMLDivElement>();\r\n\r\n  const trail = useTrail(logoUri.length, {\r\n    from: {\r\n      transform: 'scale3d(1,1,1)',\r\n      opacity: 0,\r\n    },\r\n    transform: showLogos ? 'scale3d(1,1,1)' : 'scale3d(0,0,0)',\r\n    opacity: showLogos ? 1 : 0,\r\n  });\r\n\r\n  const handleScroll = (e: any) => {\r\n    const scrollingElement = e.target.scrollingElement;\r\n    const node = divRef.current;\r\n\r\n    if (node && scrollingElement) {\r\n      if ((scrollingElement.clientHeight + scrollingElement.scrollTop) > (node.offsetTop + 200)) {\r\n        setShowLogos(true);\r\n      } else {\r\n        setShowLogos(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', handleScroll, true);\r\n\r\n    return () => {\r\n      window.removeEventListener('scroll', handleScroll, true);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div className='databases-container' ref={divRef}>\r\n      <h2>Databases</h2>\r\n      <div className='logo-container'>\r\n        {trail.map(({...props}, index) => (\r\n          <animated.div className='logo' style={props}>\r\n            <img\r\n              key={logoUri[index].image}\r\n              src={logoUri[index].image}\r\n              alt={logoUri[index].caption}\r\n              data-tip\r\n              data-for={logoUri[index].image}\r\n            />\r\n            <Reactooltip id={logoUri[index].image}>{logoUri[index].caption}</Reactooltip>\r\n          </animated.div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SkillsComponentDatabases;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {useTrail, animated} from 'react-spring';\r\nimport Reactooltip from 'react-tooltip';\r\n\r\nconst logoUri = [\r\n  {\r\n    image: './images/jest-logo.svg',\r\n    caption: 'Jest',\r\n  },\r\n  {\r\n    image: './images/mocha-logo.svg',\r\n    caption: 'Mocha',\r\n  },\r\n  {\r\n    image: './images/chai-logo.png',\r\n    caption: 'Chai',\r\n  },\r\n];\r\n\r\nconst SkillsComponentTests: React.FC = () => {\r\n  const [showLogos, setShowLogos] = useState(false);\r\n\r\n  let divRef = React.createRef<HTMLDivElement>();\r\n\r\n  const trail = useTrail(logoUri.length, {\r\n    from: {\r\n      transform: 'rotateZ(0deg)',\r\n      opacity: 0,\r\n    },\r\n    transform: showLogos ? 'rotateZ(0deg)' : 'rotateZ(360deg)',\r\n    opacity: showLogos ? 1 : 0,\r\n  });\r\n\r\n  const handleScroll = (e: any) => {\r\n    const scrollingElement = e.target.scrollingElement;\r\n    const node = divRef.current;\r\n\r\n    if (node && scrollingElement) {\r\n      if ((scrollingElement.clientHeight + scrollingElement.scrollTop) > (node.offsetTop + 200)) {\r\n        setShowLogos(true);\r\n      } else {\r\n        setShowLogos(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', handleScroll, true);\r\n\r\n    return () => {\r\n      window.removeEventListener('scroll', handleScroll, true);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div className='tests-container' ref={divRef}>\r\n      <div className='logo-container'>\r\n        {trail.map(({...props}, index) => (\r\n          <animated.div className='logo' style={props}>\r\n             <img\r\n              key={logoUri[index].image}\r\n              alt={logoUri[index].caption}\r\n              src={logoUri[index].image}\r\n              data-tip\r\n              data-for={logoUri[index].image}\r\n            />\r\n            <Reactooltip id={logoUri[index].image}>{logoUri[index].caption}</Reactooltip>\r\n          </animated.div>\r\n          ))}\r\n      </div>\r\n      <h2>Test Libraries</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SkillsComponentTests;","import React, {useState, useEffect} from 'react';\r\nimport {useTrail, animated} from 'react-spring';\r\nimport Reactooltip from 'react-tooltip';\r\n\r\nconst logoUri = [\r\n  {\r\n    image: './images/heroku-logo.svg',\r\n    caption: 'Heroku',\r\n  },\r\n  {\r\n    image: './images/github-logo.png',\r\n    caption: 'Github',\r\n  },\r\n  {\r\n    image: './images/Git-logo.svg',\r\n    caption: 'Git',\r\n  },\r\n  {\r\n    image: './images/redux-logo.png',\r\n    caption: 'Redux',\r\n  },\r\n  {\r\n    image: './images/Boostrap_logo.svg',\r\n    caption: 'Bootstrap',\r\n  },\r\n  {\r\n    image: './images/mongoose-logo.png',\r\n    caption: 'Mongoose',\r\n  },\r\n  {\r\n    image: './images/socket-io.svg',\r\n    caption: 'Socket.io',\r\n  },\r\n  {\r\n    image: './images/passport-logo.png',\r\n    caption: 'Passport.JS'\r\n  },\r\n];\r\n\r\nconst SkillsComponentOther: React.FC = () => {\r\n  const [showLogos, setShowLogos] = useState(false);\r\n\r\n  let divRef = React.createRef<HTMLDivElement>();\r\n\r\n  const trail = useTrail(logoUri.length, {\r\n    from: {\r\n      transform: 'translate3d(0,200px,0)',\r\n      opacity: 0,\r\n    },\r\n    transform: showLogos ? 'translate3d(0,0,0)' : 'translate3d(0,200px,0)',\r\n    opacity: showLogos ? 1 : 0,\r\n  });\r\n\r\n  const handleScroll = (e: any) => {\r\n    const scrollingElement = e.target.scrollingElement;\r\n    const node = divRef.current;\r\n\r\n    if (node && scrollingElement) {\r\n      if ((scrollingElement.clientHeight + scrollingElement.scrollTop) > (node.offsetTop + 200)) {\r\n        setShowLogos(true);\r\n      } else {\r\n        setShowLogos(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', handleScroll, true);\r\n\r\n    return () => {\r\n      window.removeEventListener('scroll', handleScroll, true);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div className='other-container' ref={divRef}>\r\n      <h2>Other</h2>\r\n      <div className='logo-container'>\r\n        {trail.map(({...props}, index) => (\r\n          <animated.div className='logo' style={props}>\r\n          <img\r\n            key={logoUri[index].image}\r\n            alt={logoUri[index].caption}\r\n            src={logoUri[index].image}\r\n            data-tip\r\n            data-for={logoUri[index].image}\r\n          />\r\n          <Reactooltip id={logoUri[index].image}>{logoUri[index].caption}</Reactooltip>\r\n        </animated.div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SkillsComponentOther;","import React, {useEffect} from 'react';\r\nimport './SkillsComponent.css';\r\nimport SkillsComponentLanguages from './SkillsComponentLanguages';\r\nimport SkillsComponentFrameworks from './SkillsComponentFrameworks';\r\nimport SkillsComponentDatabases from './SkillsComponentDatabases';\r\nimport SkillsComponentTests from './SkillsComponentTests';\r\nimport SkillsComponentOther from './SkillsComponentOther';\r\n\r\ninterface IProps {\r\n  setTrigger: React.Dispatch<React.SetStateAction<number | null>>,\r\n}\r\n\r\nconst SkillsComponent: React.FC<IProps> = (props) => {\r\n  let divRef = React.createRef<HTMLDivElement>();\r\n\r\n  useEffect(() => {\r\n    const node = divRef.current;\r\n    if (node) {\r\n      props.setTrigger(node.offsetTop)\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div id='skills' className='SkillsComponent' ref={divRef}>\r\n      <h3>Skills Component</h3>\r\n      <SkillsComponentLanguages />\r\n      <SkillsComponentFrameworks />\r\n      <SkillsComponentDatabases />\r\n      <SkillsComponentTests />\r\n      <SkillsComponentOther />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SkillsComponent;\r\n","import React from 'react';\r\nimport Modal from 'react-modal';\r\nimport './ProjectModal.css';\r\n\r\ninterface IProps {\r\n  project: {\r\n    name: string,\r\n    url: string,\r\n    description: string,\r\n    webLink: string,\r\n    githubLink: string,\r\n  },\r\n  isOpen: boolean,\r\n  closeWindow: () => void,\r\n}\r\n\r\nconst ProjectModal: React.FC<IProps> = (props) => {\r\n  function closeModal() {\r\n    props.closeWindow();\r\n  }\r\n\r\n  function onClick(link: string): void {\r\n    window.open(link, '_blank');\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n    isOpen={props.isOpen}\r\n    onRequestClose={closeModal}\r\n    closeTimeoutMS={500}\r\n    >\r\n      <img className='modal-project-image' src={props.project.url} alt={props.project.name + ' logo'}/>\r\n      <h2>{props.project.name}</h2>\r\n      <p>{props.project.description}</p>\r\n      <button className='modal-button' onClick={() => onClick(props.project.webLink)}>Project Site</button>\r\n      <button className='modal-button' onClick={() => onClick(props.project.githubLink)}>GitHub Repository</button>\r\n      <button className='modal-button' onClick={closeModal}>Close</button>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default ProjectModal;","import React, {useState} from 'react';\r\nimport {useSpring, animated} from 'react-spring';\r\nimport ProjectModal from './ProjectModal';\r\n\r\ninterface IProps {\r\n  project: {\r\n    name: string,\r\n    url: string,\r\n    description: string,\r\n    webLink: string,\r\n    githubLink: string,\r\n  },\r\n}\r\n\r\nconst ProjectsComponentContainer: React.FC<IProps> = (props) => {\r\n  const [hover, setHover] = useState(false);\r\n  const [openModal, setOpenModal] = useState(false);\r\n\r\n  const imageSpring = useSpring({\r\n    from: {\r\n      opacity: 1,\r\n    },\r\n    opacity: hover ? 0.3 : 1,\r\n    backgroundImage: 'url(' + props.project.url + ')',\r\n  });\r\n\r\n  const headerSpring = useSpring({\r\n    from: {\r\n      opacity: 0,\r\n      transform: 'translate3d(0,-50px,0)',\r\n    },\r\n    transform: hover ? 'translate3d(0,0px,0)' : 'translate3d(0,-50px,0)',\r\n    opacity: hover ? 1 : 0,\r\n  });\r\n\r\n  const buttonSpring = useSpring({\r\n    from: {\r\n      opacity: 0,\r\n      transform: 'translate3d(0,50px,0)',\r\n    },\r\n    transform: hover ? 'translate3d(0,0px,0)' : 'translate3d(0,50px,0)',\r\n    opacity: hover ? 1 : 0,\r\n  });\r\n\r\n  function handleScrollOn() {\r\n    setHover(true);\r\n  };\r\n\r\n  function handleScrollOff() {\r\n    setHover(false);\r\n  };\r\n\r\n  function openProjectModal() {\r\n    setOpenModal(true);\r\n  }\r\n\r\n  function closeProjectModal() {\r\n    setOpenModal(false);\r\n  }\r\n\r\n  return (\r\n    <div onMouseOver={handleScrollOn} onMouseLeave={handleScrollOff}>\r\n      <animated.div className='project-image' style={imageSpring}></animated.div>\r\n      <animated.h2 className={'project-header'} style={headerSpring}>{props.project.name}</animated.h2>\r\n      <animated.button className='project-button' style={buttonSpring} onClick={openProjectModal}>Click Here</animated.button>\r\n      <ProjectModal project={props.project} isOpen={openModal} closeWindow={closeProjectModal}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProjectsComponentContainer;","import React, {useState, useEffect} from 'react';\r\nimport './ProjectsComponent.css';\r\nimport {useTrail, animated} from 'react-spring';\r\nimport ProjectsComponentContainer from './ProjectsComponentContainer';\r\n\r\nconst projects = [\r\n  {\r\n    name: 'Beer Buds',\r\n    url: './images/beer-buds.png',\r\n    description: 'A full stack web application to track people going to venues. Tech stack includes: React, Express, Mongoose, & Node.',\r\n    webLink: 'https://beer-buds.herokuapp.com/',\r\n    githubLink: 'https://github.com/wwSchrader/beer-buds',\r\n  },\r\n  {\r\n    name: 'Book Brain',\r\n    url: './images/book-brain.png',\r\n    description: 'A full stack web application to simulate online book trading. Tech stack includes: React, Express, Mongoose, & Node.',\r\n    webLink: 'https://book-brain.herokuapp.com/',\r\n    githubLink: 'https://github.com/wwSchrader/book-brain',\r\n  },\r\n  {\r\n    name: 'Game of Life',\r\n    url: './images/game-of-life.png',\r\n    description: 'A web application where you can play the Game of Life!',\r\n    webLink: 'https://wwschrader.github.io/game-of-life/',\r\n    githubLink: 'https://github.com/wwSchrader/game-of-life',\r\n  },\r\n  {\r\n    name: 'Howling',\r\n    url: './images/howling.png',\r\n    description: 'A full stack twitter clone. Tech stack includes: React, Express, Node, & Mongoose.',\r\n    webLink: 'https://howling.herokuapp.com',\r\n    githubLink: 'https://github.com/wwSchrader/howler',\r\n  },\r\n  {\r\n    name: 'React Rougelike',\r\n    url: './images/react-roguelike.png',\r\n    description: 'A web application where you play a dungeon crawler.',\r\n    webLink: 'https://wwschrader.github.io/react-rougelike/',\r\n    githubLink: 'https://github.com/wwSchrader/react-rougelike',\r\n  },\r\n  {\r\n    name: 'Voting App',\r\n    url: './images/voting-app.png',\r\n    description: 'A full stack web application where you vote on surveys. Tech stack includes: React, Express, Node, & Mongoose.',\r\n    webLink: 'https://pure-sands-28481.herokuapp.com/',\r\n    githubLink: 'https://github.com/wwSchrader/voting-app',\r\n  },\r\n];\r\n\r\ninterface IProps {\r\n  setTrigger: React.Dispatch<React.SetStateAction<number | null>>,\r\n}\r\n\r\nconst ProjectsComponent: React.FC<IProps> = (props) => {\r\n  const [showProject, setShowProject] = useState(false);\r\n\r\n  const trail = useTrail(projects.length, {\r\n    from: {\r\n      opacity: 0,\r\n      transform: 'scale3d(1,1,1)',\r\n    },\r\n    opacity: showProject ? 1 : 0,\r\n    transform: showProject ? 'scale3d(1,1,1)' : 'scale3d(0,0,0)',\r\n  });\r\n\r\n  let divRef = React.createRef<HTMLDivElement>();\r\n\r\n  const handleScroll = (e: any) => {\r\n    const scrollingElement = e.target.scrollingElement;\r\n    const node = divRef.current;\r\n\r\n    if (node && scrollingElement) {\r\n      if ((scrollingElement.clientHeight + scrollingElement.scrollTop) > (node.offsetTop + 200)) {\r\n        setShowProject(true);\r\n      } else {\r\n        setShowProject(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const node = divRef.current;\r\n    if (node) {\r\n      props.setTrigger(node.offsetTop);\r\n    }\r\n\r\n    window.addEventListener('scroll', handleScroll, true);\r\n\r\n    return () => {\r\n      window.removeEventListener('scroll', handleScroll, true);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div id='projects' className='ProjectsComponent' ref={divRef}>\r\n      <h3>Projects Component</h3>\r\n      <div className='projects-container'>\r\n        {trail.map(({...props}, index) => (\r\n          <animated.div\r\n            className={'single-project-container'}\r\n            key={projects[index].name}\r\n            style={props}\r\n          >\r\n            <ProjectsComponentContainer project={projects[index]}/>\r\n          </animated.div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProjectsComponent;\r\n","import React, {useEffect} from 'react';\r\nimport './ContactComponent.css';\r\n\r\ninterface IProps {\r\n  setTrigger: React.Dispatch<React.SetStateAction<number | null>>,\r\n}\r\n\r\nconst ContactComponent: React.FC<IProps> = (props) => {\r\n  let divRef = React.createRef<HTMLDivElement>();\r\n\r\n  useEffect(() => {\r\n    const node = divRef.current;\r\n    if (node) {\r\n      props.setTrigger(node.offsetTop);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div id='contact' className='ContactComponent' ref={divRef}>\r\n      <h3>Contact Me</h3>\r\n      <form className='contact-form' action=\"https://formspree.io/wwschrader@gmail.com\" method=\"POST\">\r\n        Name:\r\n        <input type='text' name='name' required/>\r\n        Email:\r\n        <input type='email' required/>\r\n        Subject:\r\n        <input type='text' name='subject' required/>\r\n        Message:\r\n        <textarea name='message' rows={5} required/>\r\n        <button type='submit'>Submit</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ContactComponent;\r\n","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport SplashSection from './SplashSection';\nimport NavBarComponent from './NavBarComponent';\nimport BioComponent from './BioComponent';\nimport SkillsComponent from './SkillsComponent';\nimport ProjectsComponent from './ProjectsComponent';\nimport ContactComponent from './ContactComponent';\n\nconst App: React.FC = () => {\n  const [bioTrigger, setBioTrigger] = useState<null | number>(null);\n  const [skillsTrigger, setSkillsTrigger] = useState<null | number>(null);\n  const [projectsTrigger, setProjectsTrigger] = useState<null | number>(null);\n  const [contactTrigger, setContactTrigger] = useState<null | number>(null);\n\n  const [activeNav, setActiveNav] = useState('splash');\n\n  let divRef = React.createRef<HTMLDivElement>();\n\n  const handleScroll = (e: any) => {\n    const scrollingElement = e.target.scrollingElement;\n    const node = divRef.current;\n\n    if (node && scrollingElement && bioTrigger && skillsTrigger && projectsTrigger && contactTrigger) {\n      // look up scroll position to determine which navlink in the nav bar should be active\n      if(scrollingElement.scrollTop < bioTrigger - 100) {\n        setActiveNav('splash');\n      } else if(scrollingElement.scrollTop >= bioTrigger - 100 && scrollingElement.scrollTop < skillsTrigger -50) {\n        setActiveNav('bio');\n      } else if(scrollingElement.scrollTop >= skillsTrigger - 50 && scrollingElement.scrollTop < projectsTrigger - 50) {\n        setActiveNav('skills');\n      } else if(scrollingElement.scrollTop >= projectsTrigger - 50 && (scrollingElement.scrollTop + scrollingElement.clientHeight + 1) <= node.clientHeight) {\n        setActiveNav('projects');\n      } else {\n        setActiveNav('contact');\n      }\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll, true);\n\n    return () => {\n      window.removeEventListener('scroll', handleScroll, true);\n    };\n  });\n\n  return (\n    <div className=\"App\" ref={divRef}>\n      <SplashSection />\n      <NavBarComponent activeNav={activeNav}/>\n      <BioComponent setTrigger={setBioTrigger}/>\n      <SkillsComponent setTrigger={setSkillsTrigger}/>\n      <ProjectsComponent setTrigger={setProjectsTrigger}/>\n      <ContactComponent setTrigger={setContactTrigger}/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}